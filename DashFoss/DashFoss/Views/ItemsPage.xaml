<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="DashFoss.Views.ItemsPage"
             Title="{Binding Title}"
             xmlns:local="clr-namespace:DashFoss.ViewModels"  
             xmlns:ff="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
             xmlns:model="clr-namespace:DashFoss.Models" xmlns:xamlbits="clr-namespace:DashFoss.XamlBits" xmlns:imagefillwidthforms="clr-namespace:ImageFillWidthForms" xmlns:commands="clr-namespace:DashFoss.Commands"
             x:Name="BrowseItemsPage">
    <!--<ContentPage.ToolbarItems>
        <ToolbarItem Text="Add" Command="{Binding AddItemCommand}" />
    </ContentPage.ToolbarItems>-->

    <Grid BackgroundColor="{StaticResource BehindPostColor}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions> 
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        

        <Label Text="{Binding BackgroundText}" VerticalOptions="Center" HorizontalOptions="Center" TextColor="{StaticResource SubtleTextColor}"/>

        <RefreshView x:DataType="local:PostsViewModel" Command="{Binding LoadItemsCommand}" IsRefreshing="{Binding IsBusy, Mode=TwoWay}" x:Name="PostsRefreshView"
                     Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="2">
            <CollectionView x:Name="ItemsListView"
                    ItemsSource="{Binding Posts}"
                            ItemSizingStrategy="MeasureAllItems"
                    SelectionMode="None">

                <CollectionView.Resources>

                    <commands:OpenBlogCommand x:Key="OpenBlogCommand"/>

                    <commands:InlineLinkClickCommand x:Key="InlineLinkClickCommand"/>

                    <DataTemplate x:DataType="{x:Type model:HtmlTextBit}" x:Key="HtmlTextBitDataTemplate">
                        <!--<Label Text="{Binding html}" FontSize="Medium" TextType="Html"></Label>-->
                        <!--<Label Text="hello"/>-->
                        <Label Margin="0, 0, 0, 0" FormattedText="{Binding FormattedString}" LineBreakMode="CharacterWrap" FontSize="Medium" TextColor="{StaticResource BodyTextColor}"></Label>
                    </DataTemplate>

                    <DataTemplate x:DataType="{x:Type model:ImageBit}" x:Key="ImageDataTemplate">
                        <StackLayout Orientation="Vertical">
                            <imagefillwidthforms:AspectRatioContainer PhotoInfo="{Binding Photo}" Padding="0" Margin="0">
                                <Grid BackgroundColor="{StaticResource BehindPostColor}">
                                    <Image Source="{Binding Url}" IsAnimationPlaying="True"/>
                                </Grid>
                            </imagefillwidthforms:AspectRatioContainer>
                        </StackLayout>
                    </DataTemplate>

                    <DataTemplate x:DataType="{x:Type model:BlogNameBit}" x:Key="BlogNameTemplate">
                        <Grid Padding="0" Margin="0,6,0,1">
                            <Grid.GestureRecognizers>
                                <TapGestureRecognizer Command="{StaticResource OpenBlogCommand}" CommandParameter="{Binding BlogName}"/>
                            </Grid.GestureRecognizers>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="22"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Image Aspect="AspectFill" HeightRequest="22" WidthRequest="22" Source="{Binding ProfilePictureUrl}"/>
                            <Label Padding="0" Margin="7,0,0,0" FontAttributes="Bold" FontSize="Subtitle" Grid.Column="1" Text="{Binding BlogName}"></Label>
                        </Grid>
                    </DataTemplate>

                    <DataTemplate x:DataType="{x:Type model:QuestionAnswerBit}" x:Key="QuestionAnswerBitTemplate">
                        <Frame BackgroundColor="{StaticResource Secondary}" Grid.Row="0" CornerRadius="15">
                            <StackLayout Orientation="Vertical">
                                <Label Text="{Binding QuestionAsker, StringFormat='{}{0} asked:'}" TextColor="{StaticResource QuestionAskerColor}" FontSize="14"></Label>
                                <FlexLayout Grid.Row="1"
                                        Direction="Column"
                                        BindableLayout.ItemsSource="{Binding QuestionBits}" BindableLayout.ItemTemplateSelector="{StaticResource BitTemplateSelector}">
                                </FlexLayout>
                            </StackLayout>
                        </Frame>
                    </DataTemplate>

                    <!--<DataTemplate x:DataType="{x:Type model:AudioBit}" x:Key="AudioBitTemplate">
                        -->
                    <!--<Label Text="{Binding html}" FontSize="Medium" TextType="Html"></Label>-->
                    <!--
                        <StackLayout>
                            <WebView Source="{Binding Url}" WidthRequest="400" HeightRequest="400"/>
                        </StackLayout>
                    </DataTemplate>-->

                    <DataTemplate x:DataType="{x:Type model:IFrameBit}" x:Key="IFrameBitTemplate">
                        <!--<Label Text="{Binding html}" FontSize="Medium" TextType="Html"></Label>-->
                        <StackLayout>
                            <WebView Source="{Binding Url}" WidthRequest="{Binding Width}" HeightRequest="{Binding Height}"/>
                        </StackLayout>
                    </DataTemplate>

                    <DataTemplate x:DataType="{x:Type model:VideoBit}" x:Key="VideoTemplate">
                        <StackLayout Orientation="Vertical" BackgroundColor="{StaticResource VideoBackgroundColor}" Padding="2">
                            <!--<Label Text="video here :)"></Label>
                            <Label Text="{Binding Url}"></Label>-->
                            <StackLayout.Resources>
                                <commands:IsMutedConverter x:Key="IsMutedButtonLabelConverter"/>
                                <commands:IsPlayingConverter x:Key="IsPlayingButtonLabelConverter"/>
                            </StackLayout.Resources>

                            <xct:MediaElement IsLooping="True" Volume="0" AutoPlay="True" ShowsPlaybackControls="False" Source="{Binding Url}" WidthRequest="400" HeightRequest="400" x:Name="VideoPlayer"/>

                            <Grid HeightRequest="30" Margin="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <ImageButton Source="{xamlbits:CustomImageSourceExtension DashFoss.Resources.Images.rewind.svg}" BackgroundColor="Transparent" Grid.Column="0" CommandParameter="{Reference VideoPlayer}">
                                    <ImageButton.Command>
                                        <commands:RewindVideoCommand></commands:RewindVideoCommand>
                                    </ImageButton.Command>
                                </ImageButton>

                                <!--Rewind button-->
                                <!--<Button Grid.Column="0" BackgroundColor="Blue" Margin="0" Padding="0" ImageSource="rewind.svg" CommandParameter="{Reference VideoPlayer}">
                                    <Button.Command>
                                        <commands:RewindVideoCommand></commands:RewindVideoCommand>
                                    </Button.Command>
                                </Button>-->

                                <!--Play pause button-->
                                <ImageButton Grid.Column="1" BackgroundColor="Transparent" Margin="0" Padding="0" Source="{Binding Source={Reference VideoPlayer}, Path=CurrentState, Converter={StaticResource IsPlayingButtonLabelConverter}}" CommandParameter="{Reference VideoPlayer}">
                                    <ImageButton.Command>
                                        <commands:PauseVideoCommand></commands:PauseVideoCommand>
                                    </ImageButton.Command>
                                </ImageButton>

                                <!--Mute unmute button-->
                                <ImageButton Grid.Column="2" BackgroundColor="Transparent" Margin="0" Padding="0" Source="{Binding Source={Reference VideoPlayer}, Path=Volume, Converter={StaticResource IsMutedButtonLabelConverter}}" CommandParameter="{Reference VideoPlayer}">
                                    <ImageButton.Command>
                                        <commands:MuteVideoCommand></commands:MuteVideoCommand>
                                    </ImageButton.Command>
                                </ImageButton>
                                
                                <Button BackgroundColor="Transparent" Grid.Column="3" Margin="0" Padding="0" Text="⛶"/>
                            </Grid>

                        </StackLayout>
                    </DataTemplate>

                    <xamlbits:PostBitDataTemplateSelector x:Key="BitTemplateSelector"
                                            BlogNameTextBitTemplate="{StaticResource BlogNameTemplate}"
                                            HtmlTextBitTemplate="{StaticResource HtmlTextBitDataTemplate}"
                                            VideoBitTemplate="{StaticResource VideoTemplate}"
                                            ImageBitTemplate="{StaticResource ImageDataTemplate}"
                                            QABitTemplate="{StaticResource QuestionAnswerBitTemplate}"
                                            IFrameBitTemplate="{StaticResource IFrameBitTemplate}">

                    </xamlbits:PostBitDataTemplateSelector>
                </CollectionView.Resources>

                <CollectionView.ItemTemplate>
                    <DataTemplate>
                        <Frame Padding="10, 6, 10, 6" BorderColor="Black" BackgroundColor="{DynamicResource PostBackground}" x:DataType="model:TumblrPost">
                            <Frame.Resources>
                                <commands:IsLikedConverter x:Key="IsLikedConverter"/>
                                <commands:LikePostCommand x:Key="LikePostCommand"/>
                            </Frame.Resources>

                            <StackLayout Orientation="Vertical">

                                <!--<BoxView HeightRequest="5" Margin="-20,0,-20,0" Color="{StaticResource BehindPostColor}"></BoxView>-->

                                <StackLayout Orientation="Horizontal" HeightRequest="60" Margin="0, 0, 0, 0">
                                    <Image Source="{Binding AvatarUrl}" WidthRequest="50" HeightRequest="50" Margin="0, 0, 8, 0" VerticalOptions="CenterAndExpand"/>
                                    <StackLayout Orientation="Vertical" VerticalOptions="CenterAndExpand">
                                        <Label
                                        Text="{Binding Author}"
                                        LineBreakMode="NoWrap" 
                                        Style="{DynamicResource ListItemTextStyle}" 
                                        FontAttributes="Bold"
                                        TextColor="{StaticResource TextColor}"
                                        FontSize="Subtitle">
                                            <Label.GestureRecognizers>
                                                <TapGestureRecognizer Command="{StaticResource OpenBlogCommand}" CommandParameter="{Binding Author}"/>
                                            </Label.GestureRecognizers>
                                        </Label>
                                        <Label VerticalTextAlignment="Center" Text="{Binding RebloggedFrom, StringFormat='🔁 {0}'}" IsVisible="{Binding WasReblogged}">
                                            <Label.GestureRecognizers>
                                                <TapGestureRecognizer Command="{StaticResource OpenBlogCommand}" CommandParameter="{Binding RebloggedFrom}"/>
                                            </Label.GestureRecognizers>
                                        </Label>
                                    </StackLayout>
                                    <Label Text="➽" Margin="0,0,10,0" VerticalOptions="Center" HorizontalOptions="FillAndExpand" HorizontalTextAlignment="End" TextColor="{StaticResource SubtleTextColor}">
                                        <Label.GestureRecognizers>
                                            <TapGestureRecognizer Command="{StaticResource InlineLinkClickCommand}" CommandParameter="{Binding PostUrl}"/>
                                        </Label.GestureRecognizers>
                                    </Label>
                                </StackLayout>

                                <FlexLayout
                                        Direction="Column"
                                        BindableLayout.ItemsSource="{Binding Bits}" BindableLayout.ItemTemplateSelector="{StaticResource BitTemplateSelector}">
                                </FlexLayout>

                                <ScrollView Grid.ColumnSpan="2" Orientation="Horizontal" Margin="0,0,0,0" IsVisible="{Binding GotTags}">
                                    <Label TextColor="{StaticResource SubtleTextColor}" FontSize="13" LineBreakMode="NoWrap" Text="{Binding AllTags}"></Label>
                                </ScrollView>

                                <Grid Padding="0,0,5,5" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" VerticalOptions="Center" Text="{Binding Notes,StringFormat='{}{0:N0} notes'}" FontSize="Small" TextColor="{StaticResource SubtleTextColor}"/>
                                    <Image Grid.Column="1" WidthRequest="25" Source="{Binding Liked, Converter={StaticResource IsLikedConverter}}">
                                        <Image.GestureRecognizers>
                                            <TapGestureRecognizer Command="{StaticResource LikePostCommand}" CommandParameter="{Binding}" />
                                        </Image.GestureRecognizers>
                                    </Image>
                                </Grid>
                            </StackLayout>
                        </Frame>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
        </RefreshView>


        <Button IsVisible="{Binding ShouldShowFollowButton}"
                Text="{Binding FollowButtonText}"
                Grid.Row="0" Grid.Column="1"
                BackgroundColor="{StaticResource Primary}" Margin="5" Command="{Binding FollowUnfollowButtonCommand}">
        </Button>
    </Grid>
</ContentPage>